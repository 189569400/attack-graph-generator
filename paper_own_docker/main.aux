\relax 
\providecommand \oddpage@label [2]{}
\@writefile{toc}{\contentsline {section}{\numberline {I}INTRODUCTION}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {II}RELATED WORK}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {III}PROPOSED METHOD}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Our Attack Graph System. The rectangles denote the main components of the system: Topology Parser, Vulnerability Parser and Attack Graph Parser. The arrows describe the flow of the system and the files are the intermediate products.}}{2}}
\newlabel{AttackGraphSystem}{{1}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {III-.1}Technical Details}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {III-.2}Topology Parser}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {III-.3}Vulnerability Parser}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {III-.4}Attack Graph Parser}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {III-.5}Breadth-First Search}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {IV}EVALUATION}{3}}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces Breadth-first search algorithm for generating an attack graph.}}{3}}
\bibcite{c1}{1}
\bibcite{c2}{2}
\bibcite{c3}{3}
\bibcite{c4}{4}
\bibcite{c5}{5}
\bibcite{c6}{6}
\bibcite{c7}{7}
\bibcite{c8}{8}
\@writefile{toc}{\contentsline {section}{\numberline {V}CONCLUSION}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {VI}FUTURE WORK}{4}}
\@writefile{toc}{\contentsline {section}{References}{4}}
\@writefile{lot}{\contentsline {table}{\numberline {I}{\ignorespaces List of randomly selected examples that were analyzed with our attack graph generation system.}}{5}}
\@writefile{lot}{\contentsline {table}{\numberline {II}{\ignorespaces Table with graph characteristics(no. of containers, nodes and edges in both the topology and attack graph) and executing times of the main attack graph generator components: Topology Parser, Vulerability Preprocessing Module and Breadth-first Search Module(the latter two parts of the main attack graph generation process). The examples are composed of two containers: Phpmailer and Samba. The Phpmailer container has 181, while the Samba container has 367 vulnerabilities. The topology time is the time required to generate the graph topology. The vulnerabilities preprocessing time is the time required to convert the vulnerabilities into sets of pre- and postconditions. The Breath-First Search is the main component that generates the attack graph. All of the components are executed five times for each of the examples and their final time is averaged. The times are given in seconds. The total time contains the topology parsing, the attack graph generation and some minor processes. However, the total time does not include the vulnerability analysis by Clair. Evaluation of Clair can depend on multiple factors and it is therefore not in the scope of this analysis.}}{6}}
